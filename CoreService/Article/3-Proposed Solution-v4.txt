This interoperability solution was needed to create an interoperable access control systems in a campus. The scenario is as follows:
A campus containing multiple buildings is using a couple of different access control systems to track entrance and exit of their employees , each building's access control system is chosen according to its security level. In each building, there is a secuity employee who is responsible for tracking the access control system. However for some buildings, they want secuity employee in a building to be able to track couple of buildings while locating in his/her original building. For example, security employee at Building A could track movement of employees of both Building A and Building B, and security employee at Building B could track movement of employees of both Building B and Building A. However as stated earlier, the access control systems installed in Building A and Building B could be different, so we have to forward each system activity between these buildings. To illustrate, access control system of Building A is publishing messages about the entrance to and exit from any toll gate to a topic named as "track" in its middleware, which is RabbitMQ. And access control system of Building B is publishing messages about the entrance to and exit from any toll gate to a topic named as "movement" in its middleware, which is Kafka. Both access control system is configurable to show employee movement, they can show data from various topics in their middlewares, e.g. access control system of Building A can show employee movement which is published on not just topic "track" but also from other topics, similarly for Building B's system. For this setup, we need to forward messages from "track" topic in RabbitMQ of Building A to Kafka of Building B with a topic name of our choice, we need to forward messages from "movement" topic in Kafka of Building B to RabbitMQ of Building A with a topic name of our choice. We are going to forward messages from "track" in RabbitMQ to "buildingA_movement" topic in Kafka, and forward messages from "movement" in Kafka to "buildingB_track" topic in RabbitMQ, and configure each access control system to show data also from these topics.
In short we need to forward messages published to some topics in both middlewares to each other. However there are different access control systems using different middleware solutions, and in the future there could be other systems to integrate together. That is why we needed a solution that is extensible to other middleware solutions, and configurable about which messages of which topics in which middleware should be forwarded to which topics in which middleware. And we come up with the following solution, seen in figure[coreGeneral.png].

//İMAGE
//İMAGE
//İMAGE
figure[coreGeneral.png]

Our solution for interoperability among different systems using different middleware technologies for their publish and subscribe operations consists of mainly three parts, which are :
	- Converter Configurator: is responsible for orchestrating the Middleware Converters through their Rest APIs. It also serves a Rest API through which users of the interoperability tool can configure the which topics in which systems should be forwarded to which topics of which systems.
	- Middleware Converters: is responsible to forward messages between middle broker and system broker. It is configured through its Rest API about which messages in which topics should be forwarded.
	- Middleware (named middle broker): is a middleware which is used by Middleware Converters to forward messages between different access control systems. 
	
Note: We will use broker and middleware interchangeably.
